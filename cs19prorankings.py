# -*- coding: utf-8 -*-
"""CS19ProRankings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aeibTJzDRmkmO84LhuzpwF4oXL09sTgR
"""

import matplotlib.pyplot as plt
import numpy as np
import json
import urllib.request

# possibly need matplotlib (for plotting the points obviously lol)
# possible ideas for graphing: circle dot plot with darker colors for more hours played, distance from center is ranking
# look into principal component analysis and dimensionality reduction, SCIKIT

CENTER_POINT = 1.25

dataset = """
EliGE 76561198066693739 1.21,
ropz 76561197991272318 1.19,
Brehze 76561198054861139 1.16,
KSCERATO 76561198058500492 1.15,
sergej 76561198027839825 1.11,
dupreeh 76561198004854956 1.11,
CeRq 76561198156353883 1.11,
jkaem 76561198002708642 1.11,
flusha 76561197991348083 1.07,
JaCkz 76561197972242917 1.04
"""

def build_csgo_url(api_key, player_id):
  baseurl = "http://api.steampowered.com/ISteamUserStats/GetUserStatsForGame/v0002/"
  csgo_appid = 730

  params = {
      "appid" : csgo_appid,
      "key" : api_key,
      "steamid" : player_id
  }

  url = baseurl + "?" + urllib.parse.urlencode(params) + ".json"
  #print(url)
  return url


def read_json(api_key, player_id):
  url = build_csgo_url(api_key, player_id)
  write_file = player_id + ".txt"

  rd = urllib.request.urlopen(url)
  data = rd.read()
  
  with open(write_file, 'w') as fd2:
    for line in rd.readlines():
      fd2.write(line)
  
  return json.loads(data)

class Player_Data:
  def __init__ (self, name, player_id, rating):
    print("Creating Player Data Object: " + name)
    self.name = name
    self.player_id = player_id
    self.rating = rating
    self.kills = 0
    self.deaths = 0
    self.time = 0
    self.damage = 0

# Michael = Player_Data("Michael", 76561198068252994, 0)

  # planned functions
  # add_to_plot, generate_location

def parse_data(dset):
  split_data = dset.split(",")
  stripped_data = [x.replace("\n", "") for x in split_data]
  return stripped_data


def create_player_data_objs(parsed_set):
  return [Player_Data(player.split()[0], player.split()[1], player.split()[2]) for player in parsed_set]


parsedset = parse_data(dataset)

player_data_objs = create_player_data_objs(parsedset)

#print(player_data_objs[0].rating)

api_key = "no key"

def load_api_key(key_number):
  global api_key
  api_key = key_number

# input API KEY using load_api_key(INPUT KEY HERE)
# eligeDict = (read_json(api_key, "76561198066693739"))
#print(eligeDict)

K_INDEX = 0
D_INDEX = 1
TIME_INDEX = 2
DAMAGE_INDEX = 6